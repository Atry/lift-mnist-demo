function Grad(){
function asm_module(stdlib, foreign, heap){
"use asm";
var HEAP = new stdlib.Float32Array(heap);
var offv18=12584;
var offv34=17192;
var offv37=2570;
var offv12=17458;
var offv13=2580;
var offv10=33831;
var offv17=5790;
var offv32=33821;
var offv40=21180;
var offv89=6582;
var offv88=21181;
var offv85=9150;
var offv84=30413;
var offv87=12350;
var offv86=30421;
var offv81=12366;
var offv83=12566;
var offv82=33621;
var offv22=43449;
var offv20=14888;
var offv25=10;
var offv24=17202;
var offv67=46585;
var offv29=18610;
var offv28=5780;
var offv62=50817;
var offv71=38831;
var offv0=5806;
var offv1=6006;
var offv5=9142;
var offv6=21197;
var offv8=25805;
var offv92=12574;
var offv90=18620;
var offv91=0;
var offv54=53121;
var offv50=53131;
var offv45=43439;
var offv58=53141;

var Infinity = stdlib.Infinity;
var NaN = stdlib.NaN;
var acos = stdlib.Math.acos;
var asin = stdlib.Math.asin;
var atan = stdlib.Math.atan;
var cos = stdlib.Math.cos;
var sin = stdlib.Math.sin;
var tan = stdlib.Math.tan;
var exp = stdlib.Math.exp;
var log = stdlib.Math.log;
var ceil = stdlib.Math.ceil;
var floor = stdlib.Math.floor;
var sqrt = stdlib.Math.sqrt;
var abs = stdlib.Math.abs;
var min = stdlib.Math.min;
var max = stdlib.Math.max;
var atan2 = stdlib.Math.atan2;
var pow = stdlib.Math.pow;
var imul = stdlib.Math.imul;
var fround = stdlib.Math.fround;
var E = stdlib.Math.E;
var LN10 = stdlib.Math.LN10;
var LN2 = stdlib.Math.LN2;
var LOG2E = stdlib.Math.LOG2E;
var LOG10E = stdlib.Math.LOG10E;
var PI = stdlib.Math.PI;
var SQRT1_2 = stdlib.Math.SQRT1_2;
var SQRT2 = stdlib.Math.SQRT2;

function imax(a, b){
  a = a|0;
  b = b|0;
  return (( (a|0) > (b|0) )?a:b)|0;
}

function imin(a, b){
  a = a|0;
  b = b|0;
  return ( ( (a|0) < (b|0) )?a:b)|0;
}

function calc(){

var v30=0.0;
var v33=0.0;
var v47=0.0;
var v52=0.0;

var c3= 0;
var c2= 0;
var c1= 0;
var c6= 0;
var c5= 0;
var c4= 0;

v52 = 0.0;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv29 + c1) << 2 >> 2] = fround(0.0);
}
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv29 + c1) << 2 >> 2] = fround(((+HEAP[(offv29 + c1) << 2 >> 2]) + (+HEAP[(offv28 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(24|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(24|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + c2|0,25|0)|0) + c3) << 2 >> 2] = fround(-Infinity);
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 2; (((c2|0)<=(25|0))|0); c2 = (c2 + 1)|0){
for(c3 = 2; (((c3|0)<=(25|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + (((-2|0)+(c2|0))|0)|0,24|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2] = fround(0.0);
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2] = fround(((+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]) + (+HEAP[(offv5 + c1) << 2 >> 2])));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
for(c4 = (((0|0)>((((c2|0)-(21|0))|0)|0))?0:(((c2|0)-(21|0))|0))|0; (((c4|0)<=((((4|0)<((((c2|0)+(2|0))|0)|0))?4:(((c2|0)+(2|0))|0))|0|0))|0); c4 = (c4 + 1)|0){
for(c5 = (((0|0)>((((c3|0)-(21|0))|0)|0))?0:(((c3|0)-(21|0))|0))|0; (((c5|0)<=((((4|0)<((((c3|0)+(2|0))|0)|0))?4:(((c3|0)+(2|0))|0))|0|0))|0); c5 = (c5 + 1)|0){
HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c4|0))|0)|0,24|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2] = fround(((+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c4|0))|0)|0,24|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2]) + ((+HEAP[(offv0 + (imul((imul(c1|0,5|0)|0) + c4|0,5|0)|0) + c5) << 2 >> 2]) * (+HEAP[(offv1 + (imul(c2|0,24|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 2; (((c2|0)<=(25|0))|0); c2 = (c2 + 1)|0){
for(c3 = 2; (((c3|0)<=(25|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + (((-2|0)+(c2|0))|0)|0,24|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2] = fround((+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + (((-2|0)+(c2|0))|0)|0,24|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2] = fround((max(0.0,(+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(1|0))|0); c4 = (c4 + 1)|0){
for(c5 = 0; (((c5|0)<=(1|0))|0); c5 = (c5 + 1)|0){
HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + ((((((1|0)+(c2|0))|0)|0)-(c4|0))|0)|0,25|0)|0) + ((((((1|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2] = fround((max((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + ((((((1|0)+(c2|0))|0)|0)-(c4|0))|0)|0,25|0)|0) + ((((((1|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2]),(+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(24|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(24|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + c2|0,25|0)|0) + c3) << 2 >> 2] = fround((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + c2|0,25|0)|0) + c3) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv12 + (imul((imul(c1|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2] = fround((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + (((1|0)+((imul(2|0,c2|0)|0)|0))|0)|0,25|0)|0) + (((1|0)+((imul(2|0,c3|0)|0)|0))|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 2; (((c2|0)<=(13|0))|0); c2 = (c2 + 1)|0){
for(c3 = 2; (((c3|0)<=(13|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + (((-2|0)+(c2|0))|0)|0,12|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2] = fround(0.0);
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(7|0))|0); c4 = (c4 + 1)|0){
for(c5 = (((0|0)>((((c2|0)-(9|0))|0)|0))?0:(((c2|0)-(9|0))|0))|0; (((c5|0)<=((((4|0)<((((c2|0)+(2|0))|0)|0))?4:(((c2|0)+(2|0))|0))|0|0))|0); c5 = (c5 + 1)|0){
for(c6 = (((0|0)>((((c3|0)-(9|0))|0)|0))?0:(((c3|0)-(9|0))|0))|0; (((c6|0)<=((((4|0)<((((c3|0)+(2|0))|0)|0))?4:(((c3|0)+(2|0))|0))|0|0))|0); c6 = (c6 + 1)|0){
HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c5|0))|0)|0,12|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c6|0))|0)) << 2 >> 2] = fround(((+HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c5|0))|0)|0,12|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c6|0))|0)) << 2 >> 2]) + ((+HEAP[(offv13 + (imul((imul((imul(c1|0,8|0)|0) + c4|0,5|0)|0) + c5|0,5|0)|0) + c6) << 2 >> 2]) * (+HEAP[(offv12 + (imul((imul(c4|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2] = fround(((+HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]) + (+HEAP[(offv17 + c1) << 2 >> 2])));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 2; (((c2|0)<=(13|0))|0); c2 = (c2 + 1)|0){
for(c3 = 2; (((c3|0)<=(13|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + (((-2|0)+(c2|0))|0)|0,12|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2] = fround((+HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + (((-2|0)+(c2|0))|0)|0,12|0)|0) + (((-2|0)+(c3|0))|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv20 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2] = fround((max(0.0,(+HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(13|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(13|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + c2|0,14|0)|0) + c3) << 2 >> 2] = fround(-Infinity);
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(2|0))|0); c4 = (c4 + 1)|0){
for(c5 = 0; (((c5|0)<=(2|0))|0); c5 = (c5 + 1)|0){
HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c4|0))|0)|0,14|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2] = fround((max((+HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c4|0))|0)|0,14|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2]),(+HEAP[(offv20 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(13|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(13|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + c2|0,14|0)|0) + c3) << 2 >> 2] = fround((+HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + c2|0,14|0)|0) + c3) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(3|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv24 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,4|0)|0) + c2|0,4|0)|0) + c3) << 2 >> 2] = fround((+HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + (((2|0)+((imul(3|0,c2|0)|0)|0))|0)|0,14|0)|0) + (((2|0)+((imul(3|0,c3|0)|0)|0))|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(9|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(3|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv29 + c2) << 2 >> 2] = fround(((+HEAP[(offv29 + c2) << 2 >> 2]) + ((+HEAP[(offv25 + (imul((imul((imul((imul(c2|0,16|0)|0) + c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2]) * (+HEAP[(offv24 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2]))));
}
}
}
}
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv29 + c1) << 2 >> 2] = fround((+HEAP[(offv29 + c1) << 2 >> 2]));
}
v30 = -Infinity;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
v30 = (max(v30,(+HEAP[(offv29 + c1) << 2 >> 2])));
}
v30 = v30;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv32 + c1) << 2 >> 2] = fround((exp(((+HEAP[(offv29 + c1) << 2 >> 2]) - v30))));
}
v33 = 0.0;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
v33 = (v33 + (+HEAP[(offv32 + c1) << 2 >> 2]));
}
v33 = v33;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv34 + c1) << 2 >> 2] = fround(((+HEAP[(offv32 + c1) << 2 >> 2]) / v33));
}
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv45 + c1) << 2 >> 2] = fround((((- 1.0) * (+HEAP[(offv37 + c1) << 2 >> 2])) / (+HEAP[(offv34 + c1) << 2 >> 2])));
}
v47 = 0.0;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
v47 = (v47 + (- (((+HEAP[(offv45 + c1) << 2 >> 2]) * (+HEAP[(offv32 + c1) << 2 >> 2])) / (v33 * v33))));
}
v47 = v47;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv50 + c1) << 2 >> 2] = fround(((((+HEAP[(offv45 + c1) << 2 >> 2]) / v33) + v47) * (+HEAP[(offv32 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
v52 = (v52 + (- (+HEAP[(offv50 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv88 + c1) << 2 >> 2] = fround(0.0);
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(3|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (imul(3|0,c2|0)|0)|0,10|0)|0) + (imul(3|0,c3|0)|0)) << 2 >> 2] = fround(0.0);
}
}
}
v52 = v52;
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv54 + c1) << 2 >> 2] = fround(((+HEAP[(offv50 + c1) << 2 >> 2]) + (v52 * (+((v30 == (+HEAP[(offv29 + c1) << 2 >> 2]))|0)))));
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(9|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(3|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (imul(3|0,c3|0)|0)|0,10|0)|0) + (imul(3|0,c4|0)|0)) << 2 >> 2] = fround(((+HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (imul(3|0,c3|0)|0)|0,10|0)|0) + (imul(3|0,c4|0)|0)) << 2 >> 2]) + ((+HEAP[(offv54 + c2) << 2 >> 2]) * (+HEAP[(offv25 + (imul((imul((imul((imul(c2|0,16|0)|0) + c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2]))));
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv88 + c1) << 2 >> 2] = fround(((+HEAP[(offv88 + c1) << 2 >> 2]) + (+HEAP[(offv87 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv92 + c1) << 2 >> 2] = fround(((+HEAP[(offv91 + c1) << 2 >> 2]) + (+HEAP[(offv54 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(3|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (imul(3|0,c2|0)|0)|0,10|0)|0) + (imul(3|0,c3|0)|0)) << 2 >> 2] = fround((+HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (imul(3|0,c2|0)|0)|0,10|0)|0) + (imul(3|0,c3|0)|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv62 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2] = fround((((+HEAP[(offv58 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,10|0)|0) + (((0|0)/(-1|0))|0)|0,10|0)|0) + (((0|0)/(-1|0))|0)) << 2 >> 2]) * (+(((+HEAP[(offv22 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,14|0)|0) + (((-2|0)/(-1|0))|0)|0,14|0)|0) + (((-2|0)/(-1|0))|0)) << 2 >> 2]) == (+HEAP[(offv20 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))|0))) * (+(((+HEAP[(offv20 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]) == (+HEAP[(offv18 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))|0))));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv84 + c1) << 2 >> 2] = fround(0.0);
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv84 + c1) << 2 >> 2] = fround(((+HEAP[(offv84 + c1) << 2 >> 2]) + (+HEAP[(offv83 + c1) << 2 >> 2])));
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (imul(2|0,c2|0)|0)|0,23|0)|0) + (imul(2|0,c3|0)|0)) << 2 >> 2] = fround(0.0);
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(7|0))|0); c4 = (c4 + 1)|0){
for(c5 = (((0|0)>((((c2|0)-(9|0))|0)|0))?0:(((c2|0)-(9|0))|0))|0; (((c5|0)<=((((4|0)<((((c2|0)+(2|0))|0)|0))?4:(((c2|0)+(2|0))|0))|0|0))|0); c5 = (c5 + 1)|0){
for(c6 = (((0|0)>((((c3|0)-(9|0))|0)|0))?0:(((c3|0)-(9|0))|0))|0; (((c6|0)<=((((4|0)<((((c3|0)+(2|0))|0)|0))?4:(((c3|0)+(2|0))|0))|0|0))|0); c6 = (c6 + 1)|0){
HEAP[(offv67 + (imul((imul(c4|0,23|0)|0) + (imul(2|0,c2|0)|0)|0,23|0)|0) + (imul(2|0,c3|0)|0)) << 2 >> 2] = fround(((+HEAP[(offv67 + (imul((imul(c4|0,23|0)|0) + (imul(2|0,c2|0)|0)|0,23|0)|0) + (imul(2|0,c3|0)|0)) << 2 >> 2]) + ((+HEAP[(offv62 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c5|0))|0)|0,12|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c6|0))|0)) << 2 >> 2]) * (+HEAP[(offv13 + (imul((imul((imul(c1|0,8|0)|0) + c4|0,5|0)|0) + c5|0,5|0)|0) + c6) << 2 >> 2]))));
}
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (imul(2|0,c2|0)|0)|0,23|0)|0) + (imul(2|0,c3|0)|0)) << 2 >> 2] = fround((+HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (imul(2|0,c2|0)|0)|0,23|0)|0) + (imul(2|0,c3|0)|0)) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
if((((((((((c3|0)-(1|0))|0)|0)%(2|0))|0)|0)==(0|0))|0)){
HEAP[(offv71 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2] = fround((((+HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (((0|0)/(-1|0))|0)|0,23|0)|0) + (((0|0)/(-1|0))|0)) << 2 >> 2]) * (+(((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + (((-1|0)/(-1|0))|0)|0,25|0)|0) + (((-1|0)/(-1|0))|0)) << 2 >> 2]) == (+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))) * (+(((+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]) == (+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))));
}
else{
if(((((((c2|0)%(2|0))|0)|0)==(0|0))|0)){
HEAP[(offv71 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2] = fround((((+HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (((0|0)/(-1|0))|0)|0,23|0)|0) + (((0|0)/(-1|0))|0)) << 2 >> 2]) * (+(((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + (((-1|0)/(-1|0))|0)|0,25|0)|0) + (((-1|0)/(-1|0))|0)) << 2 >> 2]) == (+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))) * (+(((+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]) == (+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))));
}
else{
HEAP[(offv71 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2] = fround((((+HEAP[(offv67 + (imul((imul(c1|0,23|0)|0) + (((0|0)/(-1|0))|0)|0,23|0)|0) + (((0|0)/(-1|0))|0)) << 2 >> 2]) * (+(((+HEAP[(offv10 + (imul((imul(c1|0,25|0)|0) + (((-1|0)/(-1|0))|0)|0,25|0)|0) + (((-1|0)/(-1|0))|0)) << 2 >> 2]) == (+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))) * (+(((+HEAP[(offv8 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]) == (+HEAP[(offv6 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2]))|0))));
}}}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv84 + c1) << 2 >> 2] = fround(((+HEAP[(offv84 + c1) << 2 >> 2]) + (+HEAP[(offv71 + (imul((imul(c1|0,24|0)|0) + c2|0,24|0)|0) + c3) << 2 >> 2])));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv84 + c1) << 2 >> 2] = fround((+HEAP[(offv84 + c1) << 2 >> 2]));
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(7|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(4|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2] = fround(0.0);
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(7|0))|0); c4 = (c4 + 1)|0){
for(c5 = (((0|0)>((((c2|0)-(9|0))|0)|0))?0:(((c2|0)-(9|0))|0))|0; (((c5|0)<=((((4|0)<((((c2|0)+(2|0))|0)|0))?4:(((c2|0)+(2|0))|0))|0|0))|0); c5 = (c5 + 1)|0){
for(c6 = (((0|0)>((((c3|0)-(9|0))|0)|0))?0:(((c3|0)-(9|0))|0))|0; (((c6|0)<=((((4|0)<((((c3|0)+(2|0))|0)|0))?4:(((c3|0)+(2|0))|0))|0|0))|0); c6 = (c6 + 1)|0){
HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c4|0,5|0)|0) + c5|0,5|0)|0) + c6) << 2 >> 2] = fround(((+HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c4|0,5|0)|0) + c5|0,5|0)|0) + c6) << 2 >> 2]) + ((+HEAP[(offv62 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c5|0))|0)|0,12|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c6|0))|0)) << 2 >> 2]) * (+HEAP[(offv12 + (imul((imul(c4|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(7|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(4|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2] = fround(((+HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2]) + (+HEAP[(offv85 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2])));
}
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(7|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(4|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2] = fround((+HEAP[(offv86 + (imul((imul((imul(c1|0,8|0)|0) + c2|0,5|0)|0) + c3|0,5|0)|0) + c4) << 2 >> 2]));
}
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(4|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2] = fround(0.0);
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(23|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(23|0))|0); c3 = (c3 + 1)|0){
for(c4 = (((0|0)>((((c2|0)-(21|0))|0)|0))?0:(((c2|0)-(21|0))|0))|0; (((c4|0)<=((((4|0)<((((c2|0)+(2|0))|0)|0))?4:(((c2|0)+(2|0))|0))|0|0))|0); c4 = (c4 + 1)|0){
for(c5 = (((0|0)>((((c3|0)-(21|0))|0)|0))?0:(((c3|0)-(21|0))|0))|0; (((c5|0)<=((((4|0)<((((c3|0)+(2|0))|0)|0))?4:(((c3|0)+(2|0))|0))|0|0))|0); c5 = (c5 + 1)|0){
HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c4|0,5|0)|0) + c5) << 2 >> 2] = fround(((+HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c4|0,5|0)|0) + c5) << 2 >> 2]) + ((+HEAP[(offv71 + (imul((imul(c1|0,24|0)|0) + ((((((2|0)+(c2|0))|0)|0)-(c4|0))|0)|0,24|0)|0) + ((((((2|0)+(c3|0))|0)|0)-(c5|0))|0)) << 2 >> 2]) * (+HEAP[(offv1 + (imul(c2|0,24|0)|0) + c3) << 2 >> 2]))));
}
}
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(4|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2] = fround(((+HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2]) + (+HEAP[(offv81 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2])));
}
}
}
for(c1 = 0; (((c1|0)<=(7|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(4|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(4|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2] = fround((+HEAP[(offv82 + (imul((imul(c1|0,5|0)|0) + c2|0,5|0)|0) + c3) << 2 >> 2]));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(11|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(11|0))|0); c3 = (c3 + 1)|0){
HEAP[(offv88 + c1) << 2 >> 2] = fround(((+HEAP[(offv88 + c1) << 2 >> 2]) + (+HEAP[(offv62 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,12|0)|0) + c2|0,12|0)|0) + c3) << 2 >> 2])));
}
}
}
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
HEAP[(offv88 + c1) << 2 >> 2] = fround((+HEAP[(offv88 + c1) << 2 >> 2]));
}
HEAP[offv40 << 2 >> 2] = fround(0.0);
for(c1 = 0; (((c1|0)<=(9|0))|0); c1 = (c1 + 1)|0){
HEAP[offv40 << 2 >> 2] = fround(((+HEAP[offv40 << 2 >> 2]) + (0.0 - ((log((+HEAP[(offv34 + c1) << 2 >> 2]))) * (+HEAP[(offv37 + c1) << 2 >> 2])))));
}
HEAP[offv40 << 2 >> 2] = fround((+HEAP[offv40 << 2 >> 2]));
for(c1 = 0; (((c1|0)<=(15|0))|0); c1 = (c1 + 1)|0){
for(c2 = 0; (((c2|0)<=(9|0))|0); c2 = (c2 + 1)|0){
for(c3 = 0; (((c3|0)<=(3|0))|0); c3 = (c3 + 1)|0){
for(c4 = 0; (((c4|0)<=(3|0))|0); c4 = (c4 + 1)|0){
HEAP[(offv90 + (imul((imul((imul((imul(c2|0,16|0)|0) + c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2] = fround(((+HEAP[(offv89 + (imul((imul((imul((imul(c2|0,16|0)|0) + c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2]) + ((+HEAP[(offv54 + c2) << 2 >> 2]) * (+HEAP[(offv24 + (imul((imul((imul(c1|0,1|0)|0) + 0|0,4|0)|0) + c3|0,4|0)|0) + c4) << 2 >> 2]))));
}
}
}
}

}

return {calc:calc};
}

var buffer = new ArrayBuffer(262144);
var mod = asm_module(window, null, buffer);


var arrays = {
ngB: new Float32Array(buffer,50296,10),
gK1: new Float32Array(buffer,49464,200),
gK2: new Float32Array(buffer,36600,3200),
K2: new Float32Array(buffer,10320,3200),
ngK2: new Float32Array(buffer,121684,3200),
FC: new Float32Array(buffer,74440,10),
Pool2: new Float32Array(buffer,68808,256),
Input: new Float32Array(buffer,24024,576),
Pool1: new Float32Array(buffer,69832,1152),
gW: new Float32Array(buffer,26328,2560),
Relu2: new Float32Array(buffer,59552,2304),
Relu1: new Float32Array(buffer,103220,4608),
gB: new Float32Array(buffer,0,10),
Loss: new Float32Array(buffer,84720,1),
B: new Float32Array(buffer,23120,10),
Target: new Float32Array(buffer,10280,10),
gB2: new Float32Array(buffer,49400,16),
W: new Float32Array(buffer,40,2560),
gB1: new Float32Array(buffer,50264,8),
Output: new Float32Array(buffer,68768,10),
Conv2: new Float32Array(buffer,50336,2304),
K1: new Float32Array(buffer,23224,200),
Conv1: new Float32Array(buffer,84788,4608),
ngW: new Float32Array(buffer,74480,2560),
B1: new Float32Array(buffer,36568,8),
B2: new Float32Array(buffer,23160,16),
ngB2: new Float32Array(buffer,84724,16),
ngB1: new Float32Array(buffer,121652,8),
ngK1: new Float32Array(buffer,134484,200),

};

return {arrays: arrays, calc: mod.calc};
}

